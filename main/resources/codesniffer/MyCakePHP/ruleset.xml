<?xml version="1.0"?>
<ruleset name="MyCakePHP">
	<description>My CakePHP coding standard</description>

	<exclude-pattern>\.git</exclude-pattern>
	<exclude-pattern>*/Config/*.ini.php</exclude-pattern>
	<exclude-pattern>*/tmp/</exclude-pattern>

	<rule ref="Squiz.Arrays.ArrayBracketSpacing"/>

	<rule ref="Squiz.Classes.LowercaseClassKeywords"/>

	<rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
	<rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
	<rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
	<rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
	<rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
	<rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>

	<rule ref="Squiz.Commenting.DocCommentAlignment"/>
	<!--<rule ref="Squiz.Commenting.InlineComment"/>-->
	<!--<rule ref="Squiz.Commenting.FunctionComment"/>-->
	<rule ref="CakePHP.Commenting.FunctionCommentThrowTag"/>
	<rule ref="CakePHP.Commenting.FunctionCommentType"/>
	<rule ref="Generic.Commenting.Todo"/>

	<rule ref="PEAR.ControlStructures.ControlSignature"/>
	<rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
	<rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
	<rule ref="CakePHP.ControlStructures.ControlStructures"/>
	<rule ref="CakePHP.ControlStructures.ElseIfDeclaration"/>
	<rule ref="CakePHP.ControlStructures.WhileStructures"/>

	<rule ref="Zend.Files.ClosingTag"/>

	<rule ref="Generic.Formatting.DisallowMultipleStatements"/>
	<rule ref="Generic.Formatting.NoSpaceAfterCast"/>
	<rule ref="CakePHP.Formatting.OneClassPerUse"/>
	<rule ref="CakePHP.Formatting.UseInAlphabeticalOrder"/>

	<rule ref="Squiz.Functions.FunctionDeclaration"/>
	<rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie"/>
	<rule ref="PEAR.Functions.ValidDefaultValue"/>
	<rule ref="CakePHP.Functions.FunctionDeclarationArgumentSpacing"/>

	<rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
	<rule ref="PSR2.Namespaces.UseDeclaration"/>

	<rule ref="Generic.NamingConventions.ConstructorName"/>
	<rule ref="CakePHP.NamingConventions.UpperCaseConstantName"/>
	<rule ref="PEAR.NamingConventions.ValidClassName"/>
	<rule ref="CakePHP.NamingConventions.ValidClassBrackets"/>
	<rule ref="CakePHP.NamingConventions.ValidFunctionName"/>
	<rule ref="CakePHP.NamingConventions.ValidTraitName"/>
	<rule ref="CakePHP.NamingConventions.ValidVariableName"/>

	<rule ref="Squiz.Operators.ValidLogicalOperators"/>

	<rule ref="Generic.PHP.DeprecatedFunctions"/>
	<rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops"/>
	<rule ref="Squiz.PHP.Eval"/>
	<rule ref="Generic.PHP.ForbiddenFunctions"/>
	<rule ref="Squiz.PHP.NonExecutableCode"/>
	<rule ref="Generic.PHP.NoSilencedErrors"/>
	<rule ref="Generic.PHP.LowerCaseConstant"/>
	<rule ref="CakePHP.PHP.DisallowShortOpenTag"/>
	<rule ref="CakePHP.PHP.TypeCasting"/>

	<rule ref="CakePHP.Strings.ConcatenationSpacing"/>

	<rule ref="Squiz.Scope.MemberVarScope"/>
	<rule ref="Squiz.Scope.MethodScope"/>
	<rule ref="Squiz.Scope.StaticThisUsage"/>

	<rule ref="Squiz.WhiteSpace.CastSpacing"/>
	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>
	<rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
	<rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
	<rule ref="Squiz.WhiteSpace.MemberVarSpacing"/>
	<rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>
	<rule ref="CakePHP.WhiteSpace.ClassSpacing"/>
	<rule ref="CakePHP.WhiteSpace.FunctionCallSpacing"/>
	<rule ref="CakePHP.WhiteSpace.FunctionClosingBraceSpace"/>
	<rule ref="CakePHP.WhiteSpace.FunctionOpeningBraceSpace"/>
	<rule ref="CakePHP.WhiteSpace.FunctionSpacing"/>
	<rule ref="CakePHP.WhiteSpace.ObjectOperatorSpacing"/>
	<rule ref="CakePHP.WhiteSpace.OperatorSpacing"/>
	<rule ref="CakePHP.WhiteSpace.ScopeClosingBrace"/>
	<rule ref="CakePHP.WhiteSpace.TabAndSpace"/>
	<rule ref="CakePHP.WhiteSpace.CommaSpacing"/>

	<!-- All rules in ./Sniffs are included automatically -->
</ruleset>
