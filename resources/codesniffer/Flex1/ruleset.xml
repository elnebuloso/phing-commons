<?xml version="1.0"?>


<ruleset name="Flex1">


    <description>flex coding standard version 1</description>


    <!-- Standards -->
    <rule ref="PSR1"/>
    <rule ref="PSR2">
        <exclude name="Generic.Files.LineLength"/>
    </rule>


    <rule ref="Flex1.Php.ForceEmptyConstructorParentheses"/>
    <rule ref="Flex1.Formatting.UseArrayShortTag"/>


    <rule ref="Symfony2.WhiteSpace.CommaSpacing"/>
    <rule ref="Symfony2.WhiteSpace.BinaryOperatorSpacing"/>
    <rule ref="Symfony2.Arrays.MultiLineArrayComma"/>
    <rule ref="Symfony2.Functions.ScopeOrder"/>
    <rule ref="Symfony2.NamingConventions.ValidClassName">
        <exclude name="Symfony2.NamingConventions.ValidClassName.InvalidInterfaceName"/>
    </rule>


    <rule ref="PEAR.Commenting.InlineComment"/>
    <rule ref="PEAR.NamingConventions.ValidClassName"/>
    <rule ref="PEAR.NamingConventions.ValidClassName"/>
    <rule ref="PEAR.WhiteSpace.ScopeClosingBrace"/>


    <rule ref="Generic.Classes.DuplicateClassName"/>
    <rule ref="Generic.Files.OneClassPerFile"/>
    <rule ref="Generic.Files.OneInterfacePerFile"/>
    <rule ref="Generic.Files.OneTraitPerFile"/>


    <rule ref="Squiz.PHP.Eval"/>
    <rule ref="Squiz.PHP.Heredoc"/>
    <rule ref="Squiz.PHP.GlobalKeyword"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.Operators.ValidLogicalOperators"/>
    <rule ref="Squiz.Classes.ClassFileName"/>
    <rule ref="Squiz.Classes.SelfMemberReference"/>
    <rule ref="Squiz.Classes.LowercaseClassKeywords"/>
    <rule ref="Squiz.WhiteSpace.ControlStructureSpacing"/>
    <rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Scope.StaticThisUsage"/>
    <rule ref="Squiz.Commenting.EmptyCatchComment"/>


    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <rule ref="Generic.Files.InlineHTML"/>
    <rule ref="Generic.CodeAnalysis.EmptyStatement">
        <exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedCATCH"/>
    </rule>


    <rule ref="CakePHP.Strings.ConcatenationSpacing"/>
    <rule ref="CakePHP.PHP.TypeCasting"/>
    <rule ref="CakePHP.Formatting.OneClassPerUse"/>


    <rule ref="MyCakePHP.PHP.Cast"/>
    <rule ref="MyCakePHP.PHP.IsInt"/>
    <rule ref="MyCakePHP.PHP.IsNull"/>
    <rule ref="MyCakePHP.PHP.IsWritable"/>
    <rule ref="MyCakePHP.WhiteSpace.TernarySpacing"/>


</ruleset>